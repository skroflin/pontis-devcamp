trigger:
  - develop

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  azureSubscription: "svc-pontis-con"
  containerRegistry: "acrwedevcamp.azurecr.io"
  env: "dev"
  # dockerComposePath: "/usr/libexec/docker/cli-plugins/docker-compose"
  dockerComposeFile: "docker-compose/docker-compose.api.yml"
  imageRepositoryApi: "demoapp-we-api"
  keyVaultName: "akv-we-devcamp-dev"
  imageTag: $(Build.BuildNumber)
  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: DockerCompose@0
            displayName: "Docker compose build"
            inputs:
              action: "Build services"
              # dockerComposePath: $(dockerComposePath)
              dockerComposeFile: $(dockerComposeFile)
              containerregistrytype: "Azure Container Registry"
              azureSubscription: $(azureSubscription)
              azureContainerRegistry: $(containerRegistry)
              additionalImageTags: $(imageTag)
              dockerComposeCommand: build
          - task: DockerCompose@0
            displayName: "Push image"
            inputs:
              action: "Push services"
              # dockerComposePath: $(dockerComposePath)
              dockerComposeFile: $(dockerComposeFile)
              containerregistrytype: "Azure Container Registry"
              azureSubscription: $(azureSubscription)
              azureContainerRegistry: $(containerRegistry)
              additionalImageTags: $(imageTag)
              dockerComposeCommand: push
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: $(azureSubscription)
              KeyVaultName: $(keyVaultName)
              SecretsFilter: "*"
              RunAsPreJob: true
